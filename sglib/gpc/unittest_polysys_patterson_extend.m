function unittest_polysys_patterson_extend(varargin)
% UNITTEST_POLYSYS_PATTERSON_EXTEND Test the POLYSYS_PATTERSON_EXTEND function.
%
% Example (<a href="matlab:run_example unittest_polysys_patterson_extend">run</a>)
%   unittest_polysys_patterson_extend
%
% See also POLYSYS_PATTERSON_EXTEND, MUNIT_RUN_TESTSUITE 

%   Elmar Zander
%   Copyright 2015, Inst. of Scientific Computing, TU Braunschweig
%
%   This program is free software: you can redistribute it and/or modify it
%   under the terms of the GNU General Public License as published by the
%   Free Software Foundation, either version 3 of the License, or (at your
%   option) any later version. 
%   See the GNU General Public License for more details. You should have
%   received a copy of the GNU General Public License along with this
%   program.  If not, see <http://www.gnu.org/licenses/>.

munit_set_function( 'polysys_patterson_extend' );


s=get_testset('set_t_12');
x = [];
for i=1:size(s,1)
    [x,w] = polysys_patterson_extend('t', x, s{i,1});
    assert_equals(x, s{i,2}(:,1)', 't_12_x');
    assert_equals(w, s{i,2}(:,2), 't_12_w', 'abstol', 1e-6);
end


s=get_testset('set_p_78');
x = [];
for i=1:size(s,1)
    [x,w] = polysys_patterson_extend('p', x, s{i,1});
    assert_equals(x, s{i,2}(:,1)', 'p_78_x');
    assert_equals(w, s{i,2}(:,2), 'p_78_w', 'abstol', 1e-6);
end

% %%
% try
%     clc
%     x = [];
%     [x,w] = polysys_patterson_extend('h', x, 1); [x', w]
%     [x,w] = polysys_patterson_extend('h', x, 2); [x', w]
%     [x,w] = polysys_patterson_extend('h', x, 6); [x', w]
%     [x,w] = polysys_patterson_extend('h', x, 10); [x', w]
% catch e
%     e.message
% end
% 
% %%
% try
%     clc
%     x = [];
%     [x,w] = polysys_patterson_extend('h', x, 1); [x', w]
%     [x,w] = polysys_patterson_extend('h', x, 4); [x', w]
%     [x,w] = polysys_patterson_extend('h', x, 8); [x', w]
% catch e
%     e.message
% end
% 
% %%
% try
%     clc
%     x = [];
%     [x,w] = polysys_patterson_extend('p', x, 1); [x', w]
%     [x,w] = polysys_patterson_extend('p', x, 2); [x', w]
%     [x,w] = polysys_patterson_extend('p', x, 4); [x', w]
%     [x,w] = polysys_patterson_extend('p', x, 8); [x', w]
%     [x,w] = polysys_patterson_extend('p', x, 16); [x', w]
%     %[x,w] = polysys_patterson_extend('p', x, 32); [x', w]
% catch e
%     e.message
% end


function set=get_testset(name)

% The following samples were generated with some mathematica code taken and adapted from
%   Sanjay Mehrotra and David Papp
%   GENERATING NESTED QUADRATURE FORMULAS FOR
%   GENERAL WEIGHT FUNCTIONS WITH KNOWN MOMENTS
% http : // arxiv.org/pdf/1203.1554 v1.pdf

switch name
    case 'set_t_12'
        set = {
            1, [
            0	1];
            2, [
            -0.866025403784438646763723170753	0.33333333333333333333333333333
            0	0.33333333333333333333333333333
            0.866025403784438646763723170753	0.33333333333333333333333333333];
            4, [
            -1.00000000000000000000000000000	0.0833333333333333333333333333
            -0.866025403784438646763723170753	0.1666666666666666666666666667
            -0.500000000000000000000000000000	0.1666666666666666666666666667
            0	0.1666666666666666666666666667
            0.500000000000000000000000000000	0.1666666666666666666666666667
            0.866025403784438646763723170753	0.1666666666666666666666666667
            1.00000000000000000000000000000	0.0833333333333333333333333333];
            6, [
            -1.00000000000000000000000000000	0.041666666666666666666666667
            -0.965925826289068286749743199729	0.083333333333333333333333333
            -0.866025403784438646763723170753	0.083333333333333333333333333
            -0.707106781186547524400844362105	0.083333333333333333333333333
            -0.500000000000000000000000000000	0.083333333333333333333333333
            -0.258819045102520762348898837624	0.083333333333333333333333333
            0	0.083333333333333333333333333
            0.258819045102520762348898837624	0.083333333333333333333333333
            0.500000000000000000000000000000	0.083333333333333333333333333
            0.707106781186547524400844362105	0.083333333333333333333333333
            0.866025403784438646763723170753	0.083333333333333333333333333
            0.965925826289068286749743199729	0.083333333333333333333333333
            1.00000000000000000000000000000	0.041666666666666666666666667];
            12, [
            -1.00000000000000000000000000000	0.02083333333333333333333
            -0.991444861373810411144557526929	0.04166666666666666666667
            -0.965925826289068286749743199729	0.04166666666666666666667
            -0.923879532511286756128183189397	0.04166666666666666666667
            -0.866025403784438646763723170753	0.04166666666666666666667
            -0.793353340291235164579776961501	0.04166666666666666666667
            -0.707106781186547524400844362105	0.04166666666666666666667
            -0.608761429008720639416097542898	0.04166666666666666666667
            -0.500000000000000000000000000000	0.04166666666666666666667
            -0.382683432365089771728459984030	0.04166666666666666666667
            -0.258819045102520762348898837624	0.04166666666666666666667
            -0.130526192220051591548406227895	0.04166666666666666666667
            0	0.04166666666666666666667
            0.130526192220051591548406227895	0.04166666666666666666667
            0.258819045102520762348898837624	0.04166666666666666666667
            0.382683432365089771728459984030	0.04166666666666666666667
            0.500000000000000000000000000000	0.04166666666666666666667
            0.608761429008720639416097542898	0.04166666666666666666667
            0.707106781186547524400844362105	0.04166666666666666666667
            0.793353340291235164579776961501	0.04166666666666666666667
            0.866025403784438646763723170753	0.04166666666666666666667
            0.923879532511286756128183189397	0.04166666666666666666667
            0.965925826289068286749743199729	0.04166666666666666666667
            0.991444861373810411144557526929	0.04166666666666666666667
            1.00000000000000000000000000000	0.02083333333333333333333]
            };
    case 'set_p_78'
        set = {
            7, [
            -0.949107912342758524526189684048	0.06474248308443484663530571634
            -0.741531185599394439863864773281	0.1398526957446383339507338857
            -0.405845151377397166906606412077	0.1909150252525594724751848877
            0	0.2089795918367346938775510204
            0.405845151377397166906606412077	0.1909150252525594724751848877
            0.741531185599394439863864773281	0.1398526957446383339507338857
            0.949107912342758524526189684048	0.06474248308443484663530571634];
            8, [
            -0.991455371120812639206854697526	0.011467661005264612481866004
            -0.949107912342758524526189684048	0.031546046314989276645350332
            -0.864864423359769072789712788641	0.05239500516112509191993816
            -0.741531185599394439863864773281	0.07032662985776295937259480
            -0.586087235467691130294144838259	0.08450236331963395141329171
            -0.405845151377397166906606412077	0.09517528903239270495662820
            -0.207784955007898467600689403773	0.10221647003764944620708100
            0	0.10474107054236391400649959
            0.207784955007898467600689403773	0.10221647003764944620708100
            0.405845151377397166906606412077	0.09517528903239270495662820
            0.586087235467691130294144838259	0.08450236331963395141329171
            0.741531185599394439863864773281	0.07032662985776295937259480
            0.864864423359769072789712788641	0.05239500516112509191993816
            0.949107912342758524526189684048	0.031546046314989276645350332
            0.991455371120812639206854697526	0.011467661005264612481866004]
            };
    otherwise
        error('sglib:unittest:patterson_extend', 'Unknown testset: %s', name);
end
